{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.9.0.0",
        "fileVersion": "4.9.0-3.24067.18 (4fc721bb)",
        "semanticVersion": "4.9.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'UserName' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Data/User.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 19,
                  "endLine": 6,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Data/User.cs",
                "region": {
                  "startLine": 6,
                  "startColumn": 19,
                  "endLine": 6,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Users' must contain a non-null value when exiting constructor. Consider declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Data/ApplicationDbContext.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 12,
                  "endLine": 7,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Data/ApplicationDbContext.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 24,
                  "endLine": 12,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0168",
          "level": "warning",
          "message": "The variable 'ex' is declared but never used",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 30,
                  "endLine": 61,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0219",
          "level": "warning",
          "message": "The variable 'unusedVariable' is assigned but its value is never used",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 20,
                  "endLine": 48,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0219",
          "level": "warning",
          "message": "The variable '_' is assigned but its value is never used",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "endLine": 50,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "CS0219",
          "level": "warning",
          "message": "The variable 'gereksizIlkAtama' is assigned but its value is never used",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 20,
                  "endLine": 52,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 14,
                  "endLine": 8,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3923",
          "level": "warning",
          "message": "Remove this conditional structure or edit its code blocks so that they're not all the same.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 13,
                  "endLine": 102,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1764",
          "level": "warning",
          "message": "Correct one of the identical expressions on both sides of operator '=='.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 22,
                  "endLine": 86,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 17,
                  "endLine": 86,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 24,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 9,
                  "endLine": 28,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 13,
                  "endLine": 61,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 13,
                  "endLine": 69,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 17,
                  "endLine": 71,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 21,
                  "endLine": 73,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 25,
                  "endLine": 75,
                  "endColumn": 28
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 29,
                  "endLine": 77,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 13,
                  "endLine": 86,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 13,
                  "endLine": 91,
                  "endColumn": 18
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 13,
                  "endLine": 102,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 104,
                  "startColumn": 13,
                  "endLine": 104,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "10": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+4 (incl 3 for nesting)",
              "5": "+5 (incl 4 for nesting)",
              "6": "+6 (incl 5 for nesting)",
              "7": "+2 (incl 1 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'gereksizIlkAtama'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 13,
                  "endLine": 53,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'gereksizIlkAtama'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 52,
                  "startColumn": 20,
                  "endLine": 52,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 13,
                  "endLine": 89,
                  "endColumn": 14
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2077",
          "level": "warning",
          "message": "Make sure using a dynamically formatted SQL query is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 25,
                  "endLine": 42,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 41,
                  "endColumn": 22
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "SQL Query is dynamically formatted and assigned to query."
            }
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'int'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 22,
                  "endLine": 97,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2589",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'True'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 17,
                  "endLine": 86,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2583",
          "level": "warning",
          "message": "Change this condition so that it does not always evaluate to 'False'. Some code paths are unreachable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 17,
                  "endLine": 102,
                  "endColumn": 25
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 24,
                  "endLine": 103,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1751",
          "level": "warning",
          "message": "Refactor the containing loop to do more than one iteration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 93,
                  "startColumn": 17,
                  "endLine": 93,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'unusedVariable'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 48,
                  "startColumn": 20,
                  "endLine": 48,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable '_'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "endLine": 50,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'riskliOperassyon'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 21,
                  "endLine": 59,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'butunKullanicilar1'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 17,
                  "endLine": 66,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'butunKullanicilar2'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'y'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/EmreBener/source/repos/SonarQubeUseCase/Program.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 17,
                  "endLine": 97,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0168": {
          "id": "CS0168",
          "shortDescription": "Variable is declared but never used",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0168)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS0219": {
          "id": "CS0219",
          "shortDescription": "Variable is assigned but its value is never used",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0219)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "An empty code block is confusing. It will require some effort from maintainers to determine if it is intentional or indicates the implementation is incomplete.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1751": {
          "id": "S1751",
          "shortDescription": "Loops with at most one iteration should be refactored",
          "fullDescription": "A loop statement with at most one iteration is equivalent to an if statement; the following block is executed only once.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1751",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1764": {
          "id": "S1764",
          "shortDescription": "Identical expressions should not be used on both sides of operators",
          "fullDescription": "Using the same value on both sides of certain operators is a code defect. In the case of logical operators, it is either a copy/paste error and, therefore, a bug, or it is simply duplicated code and should be simplified. For bitwise operators and most binary mathematical operators, having the same value on both sides of an operator yields predictable results and should be simplified as well to avoid further code defects.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1764",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "Dead stores refer to assignments made to local variables that are subsequently never used or immediately overwritten. Such assignments are unnecessary and don’t contribute to the functionality or clarity of the code. They may even negatively impact performance. Removing them enhances code cleanliness and readability. Even if the unnecessary operations do not do any harm in terms of the program’s correctness, they are - at best - a waste of computing resources.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1905": {
          "id": "S1905",
          "shortDescription": "Redundant casts should not be used",
          "fullDescription": "Casting expressions are utilized to convert one data type to another, such as transforming an integer into a string. This is especially crucial in strongly typed languages like C, C++, C#, Java, Python, and others.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1905",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2077": {
          "id": "S2077",
          "shortDescription": "Formatting SQL queries is security-sensitive",
          "fullDescription": "Formatted SQL queries can be difficult to maintain, debug and can increase the risk of SQL injection when concatenating untrusted values into the query. However, this rule doesn’t detect SQL injections (unlike rule {rule:csharpsquid:S3649}), the goal is only to highlight complex/formatted queries.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2077",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2583": {
          "id": "S2583",
          "shortDescription": "Conditionally executed code should be reachable",
          "fullDescription": "Conditional expressions which are always true or false can lead to unreachable code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2583",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2589": {
          "id": "S2589",
          "shortDescription": "Boolean expressions should not be gratuitous",
          "fullDescription": "Gratuitous boolean expressions are conditions that do not change the evaluation of a program. This issue can indicate logical errors and affect the correctness of an application, as well as its maintainability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2589",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3923": {
          "id": "S3923",
          "shortDescription": "All branches in a conditional structure should not have exactly the same implementation",
          "fullDescription": "Having all branches of a switch or if chain with the same implementation indicates a problem.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3923",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}